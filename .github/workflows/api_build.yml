name: api-build

permissions: {}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 10 * * 1" # every Monday at 10:00
  workflow_call:
    inputs:
      skipTests:
        description: "Skip tests, useful when there is a dedicated CI job for tests"
        default: true
        required: false
        type: boolean
      skipGenerate:
        description: 'Skip "go generate"'
        default: true
        required: false
        type: boolean
      buildTags:
        description: 'Build tags to use. Default is "1" which works as no-op'
        default: "1"
        required: false
        type: string
      groupSuffix:
        description: "Concurrency group suffix to allow multiple jobs"
        default: ""
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}${{ inputs.groupSuffix }}
  cancel-in-progress: true

jobs:
  run:
    name: Build API
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./api/go.mod
          cache-dependency-path: ./api/go.sum
          check-latest: true

      - name: Go Format
        working-directory: ./api
        run: gofmt -s -w . && git diff --exit-code .

      - name: Go Tidy
        working-directory: ./api
        run: go mod tidy && git diff --exit-code .

      - name: Go Mod
        working-directory: ./api
        run: go mod download

      - name: Go Mod Verify
        working-directory: ./api
        run: go mod verify

      - name: Go Generate
        if: ${{ !inputs.skipGenerate }}
        working-directory: ./api
        run: go generate ./... && git diff --exit-code .

      - name: Go Build
        working-directory: ./api
        run: go build -o=/dev/null -tags=${{ inputs.buildTags }} ./...

      - name: Go Vet
        working-directory: ./api
        run: go vet ./...

      - name: Go Compile Tests
        if: ${{ inputs.skipTests }}
        working-directory: ./api
        run: go test -exec=/bin/true -tags=${{ inputs.buildTags }} ./...

      - name: Go Test
        if: ${{ !inputs.skipTests }}
        working-directory: ./api
        run: go test -v -shuffle=on -tags=${{ inputs.buildTags }} -race -count=1 -coverprofile=coverage.txt ./...

      - name: Go Benchmark
        if: ${{ !inputs.skipTests }}
        working-directory: ./api
        run: go test -v -shuffle=on -tags=${{ inputs.buildTags }} -run=^$ -bench=. -benchtime=1x ./...

      - name: Upload Coverage
        if: ${{ !inputs.skipTests }}
        uses: codecov/codecov-action@v4
        continue-on-error: true
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          working-directory: ./api
          file: ./coverage.txt
          fail_ci_if_error: false

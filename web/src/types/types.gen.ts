/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
    "/healthcheck": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Health check endpoint
         * @description This endpoint is used to check the health of the server.
         *
         */
        get: operations["HealthcheckHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get the current user
         * @description This endpoint is used to get the current user.
         *
         */
        get: operations["GetCurrentUserHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a new user
         * @description This endpoint is used to create a new user.
         *
         */
        post: operations["CreateUserHandler"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Authenticate a user
         * @description This endpoint is used to authenticate a user.
         *
         */
        post: operations["CreateAuthenticationTokenHandler"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Logout the current user
         * @description This endpoint is used to logout the current user.
         *
         */
        get: operations["InvalidateAuthenticationTokenHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/movies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search for movies
         * @description This endpoint is used to search for movies in the TMDb database.
         *
         */
        get: operations["SearchMoviesHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/tv": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search for TV shows
         * @description This endpoint is used to search for TV shows in the TMDb database.
         *
         */
        get: operations["SearchTvHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/people": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search for people
         * @description This endpoint is used to search for people in the TMDb database.
         *
         */
        get: operations["SearchPeopleHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/movies/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get movie details
         * @description This endpoint is used to get details about a specific movie from the TMDb database.
         *
         */
        get: operations["GetMovieDetailsHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/tv/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get TV show details
         * @description This endpoint is used to get details about a specific TV show from the TMDb database.
         *
         */
        get: operations["GetTvDetailsHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/tv/${number}/season/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get TV show season details
         * @description This endpoint is used to get details about a specific season of a TV show from the TMDb database.
         *
         */
        get: operations["GetTvSeasonDetailsHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/tv/${number}/season/${number}/episode/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get TV show episode details
         * @description This endpoint is used to get details about a specific episode of a TV show from the TMDb database.
         *
         */
        get: operations["GetTvEpisodeDetailsHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/people/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get person details
         * @description This endpoint is used to get details about a specific person from the TMDb database.
         *
         */
        get: operations["GetPersonDetailsHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/cast/movies/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get movie cast
         * @description This endpoint is used to get the cast of a specific movie from the TMDb database.
         *
         */
        get: operations["GetCastMoviesHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/cast/tv/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get TV show cast
         * @description This endpoint is used to get the cast of a specific TV show from the TMDb database.
         *
         */
        get: operations["GetCastTvHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/watchproviders/movies/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get movie watch providers
         * @description This endpoint is used to get the watch providers of a specific movie from the TMDb database.
         *
         */
        get: operations["GetMovieWatchProvidersHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/watchproviders/tv/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get TV show watch providers
         * @description This endpoint is used to get the watch providers of a specific TV show from the TMDb database.
         *
         */
        get: operations["GetTvWatchProvidersHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/watchlist": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get the watchlist
         * @description This endpoint is used to get the watchlist of the current user.
         *
         */
        get: operations["GetWatchlistHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/watchlist/movies/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check if a movie is in the watchlist
         * @description This endpoint is used to check if a movie is in the watchlist of the current user.
         *
         */
        get: operations["CheckMovieInWatchlistHandler"];
        put?: never;
        /**
         * Add a movie to the watchlist
         * @description This endpoint is used to add a movie to the watchlist of the current user.
         *
         */
        post: operations["AddMovieToWatchlistHandler"];
        /**
         * Remove a movie from the watchlist
         * @description This endpoint is used to remove a movie from the watchlist of the current user.
         *
         */
        delete: operations["RemoveMovieFromWatchlistHandler"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/watchlist/tv/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check if a TV show is in the watchlist
         * @description This endpoint is used to check if a TV show is in the watchlist of the current user.
         *
         */
        get: operations["CheckTvInWatchlistHandler"];
        put?: never;
        /**
         * Add a TV show to the watchlist
         * @description This endpoint is used to add a TV show to the watchlist of the current user.
         *
         */
        post: operations["AddTvToWatchlistHandler"];
        /**
         * Remove a TV show from the watchlist
         * @description This endpoint is used to remove a TV show from the watchlist of the current user.
         *
         */
        delete: operations["RemoveTvFromWatchlistHandler"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/watched": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get the watched list
         * @description This endpoint is used to get the watched list of the current user.
         *
         */
        get: operations["GetWatchedHandler"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/watched/movies/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check if a movie is in the watched list
         * @description This endpoint is used to check if a movie is in the watched list of the current user.
         *
         */
        get: operations["CheckMovieInWatchedHandler"];
        put?: never;
        /**
         * Add a movie to the watched list
         * @description This endpoint is used to add a movie to the watched list of the current user.
         *
         */
        post: operations["AddMovieToWatchedHandler"];
        /**
         * Remove a movie from the watched list
         * @description This endpoint is used to remove a movie from the watched list of the current user.
         *
         */
        delete: operations["RemoveMovieFromWatchedHandler"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/watched/tv/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check if a TV show is in the watched list
         * @description This endpoint is used to check if a TV show is in the watched list of the current user.
         *
         */
        get: operations["CheckTvInWatchedHandler"];
        put?: never;
        /**
         * Add a TV show to the watched list
         * @description This endpoint is used to add a TV show to the watched list of the current user.
         *
         */
        post: operations["AddTvToWatchedHandler"];
        /**
         * Remove a TV show from the watched list
         * @description This endpoint is used to remove a TV show from the watched list of the current user.
         *
         */
        delete: operations["RemoveTvFromWatchedHandler"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/watched/tv/${number}/season/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check if a TV show season episodes are in the watched list
         * @description This endpoint is used to check if a TV show season episodes are in the watched list of the current user.
         *
         */
        get: operations["CheckTvSeasonInWatchedHandler"];
        put?: never;
        /**
         * Add a TV show season to the watched list
         * @description This endpoint is used to add a TV show season to the watched list of the current user.
         *
         */
        post: operations["AddTvSeasonToWatchedHandler"];
        /**
         * Remove a TV show season from the watched list
         * @description This endpoint is used to remove a TV show season from the watched list of the current user.
         *
         */
        delete: operations["RemoveTvSeasonFromWatchedHandler"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/watched/tv/${number}/season/${number}/episode/${number}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check if a TV show episode is in the watched list
         * @description This endpoint is used to check if a TV show episode is in the watched list of the current user.
         *
         */
        get: operations["CheckTvEpisodeInWatchedHandler"];
        put?: never;
        /**
         * Add a TV show episode to the watched list
         * @description This endpoint is used to add a TV show episode to the watched list of the current user.
         *
         */
        post: operations["AddTvEpisodeToWatchedHandler"];
        /**
         * Remove a TV show episode from the watched list
         * @description This endpoint is used to remove a TV show episode from the watched list of the current user.
         *
         */
        delete: operations["RemoveTvEpisodeFromWatchedHandler"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
};
export type webhooks = Record<string, never>;
export type components = {
    schemas: {
        HealthCheck: {
            healthcheck: {
                status: string;
                systemInfo: {
                    environment: string;
                    cors_trusted_origins: string[];
                    version: string;
                };
            };
        };
        UserResponse: {
            user: components["schemas"]["User"];
        };
        User: {
            /**
             * Format: int64
             * @description User id
             */
            id: number;
            /**
             * Format: rfc3339
             * @description User creation date
             */
            created_at: string;
            /** @description User supplied name */
            name: string;
            /** @description User supplied email */
            email: string;
        };
        CreateUser: {
            name: string;
            email: string;
            password: string;
        };
        AuthenticateUser: {
            email: string;
            password: string;
        };
        AuthenticationToken: {
            authentication_token: {
                token: string;
                /** Format: rfc3339 */
                expiry: string;
            };
        };
        Logout: {
            message: string;
        };
        SearchMoviesResponse: {
            movies: components["schemas"]["SearchMovie"][];
        };
        SearchMovie: {
            /** Format: int64 */
            id: number;
            title: string;
            overview: string;
            poster_url: string;
            release_date: string;
            /** Format: float */
            vote_average: number;
            /** Format: float */
            popularity: number;
        };
        SearchTVResponse: {
            tv: components["schemas"]["SearchTv"][];
        };
        SearchTv: {
            /** Format: int64 */
            id: number;
            title: string;
            overview: string;
            poster_url: string;
            release_date: string;
            /** Format: float */
            vote_average: number;
            /** Format: float */
            popularity: number;
        };
        SearchPeopleResponse: {
            people: components["schemas"]["SearchPeople"][];
        };
        SearchPeople: {
            /** Format: int64 */
            id: number;
            name: string;
            profile_url: string;
            /** Format: float */
            popularity: number;
        };
        MovieDetailsResponse: {
            movie: components["schemas"]["MovieDetails"];
        };
        MovieDetails: {
            /** Format: int64 */
            id: number;
            title: string;
            overview: string;
            release_date: string;
            genres: string[];
            runtime: number;
            poster_url: string;
            /** Format: float */
            popularity: number;
            /** Format: float */
            vote_average: number;
        };
        CastMoviesResponse: {
            cast: components["schemas"]["CastMovies"][];
        };
        CastMovies: {
            /** Format: int64 */
            id: number;
            name: string;
            character: string;
            profile_url: string;
            order: number;
            /** Format: float */
            popularity: number;
        };
        TvDetailsResponse: {
            tv: components["schemas"]["TvDetails"];
        };
        TvDetails: {
            /** Format: int64 */
            id: number;
            name: string;
            overview: string;
            first_air_date: string;
            last_air_date: string;
            genres: string[];
            number_of_seasons: number;
            number_of_episodes: number;
            seasons: components["schemas"]["TvSeason"][];
            poster_url: string;
            status: string;
            /** Format: float */
            popularity: number;
            /** Format: float */
            vote_average: number;
        };
        TvSeason: {
            /** Format: int64 */
            id: number;
            name: string;
            air_date: string;
            episode_count: number;
            overview: string;
            poster_url: string;
            /** Format: float */
            vote_average: number;
        };
        TvSeasonDetailsResponse: {
            season: components["schemas"]["TvSeasonDetails"];
        };
        TvSeasonDetails: {
            /** Format: int64 */
            id: number;
            name: string;
            air_date: string;
            overview: string;
            poster_url: string;
            episodes: components["schemas"]["TvEpisode"][];
            /** Format: float */
            vote_average: number;
        };
        TvEpisode: {
            /** Format: int64 */
            id: number;
            name: string;
            air_date: string;
            runtime: number;
            episode_type: string;
            overview: string;
            still_url: string;
            /** Format: float */
            vote_average: number;
        };
        TvEpisodeDetailsResponse: {
            episode: components["schemas"]["TvEpisodeDetails"];
        };
        TvEpisodeDetails: {
            /** Format: int64 */
            id: number;
            name: string;
            air_date: string;
            runtime: number;
            overview: string;
            still_url: string;
            /** Format: float */
            vote_average: number;
        };
        CastTvResponse: {
            cast: components["schemas"]["CastTv"][];
        };
        CastTv: {
            /** Format: int64 */
            id: number;
            name: string;
            roles: components["schemas"]["Role"][];
            profile_url: string;
            order: number;
            /** Format: float */
            popularity: number;
        };
        Role: {
            character: string;
            episode_count: number;
        };
        PersonDetailsResponse: {
            person: components["schemas"]["PersonDetails"];
        };
        PersonDetails: {
            /** Format: int64 */
            id: number;
            name: string;
            biography: string;
            birthday: string;
            profile_url: string;
            /** Format: float */
            popularity: number;
        };
        WatchProvidersResponse: {
            watch_providers: components["schemas"]["WatchProviders"];
        };
        WatchProviders: {
            /** Format: int64 */
            id: number;
            flatrate: components["schemas"]["Provider"][];
            rent: components["schemas"]["Provider"][];
            buy: components["schemas"]["Provider"][];
        };
        Provider: {
            /** Format: int64 */
            id: number;
            name: string;
            logo_url: string;
            display_priority: number;
        };
        WatchlistResponse: {
            watchlist: components["schemas"]["Watchlist"];
        };
        Watchlist: {
            movies: components["schemas"]["SearchMovie"][];
            tv: components["schemas"]["SearchTv"][];
        };
        InWatchlist: {
            in_watchlist: boolean;
        };
        Watched: {
            movies: components["schemas"]["SearchMoviesResponse"][];
            tv: components["schemas"]["SearchTVResponse"][];
        };
        InWatched: {
            in_watched: boolean;
        };
        WatchedTv: {
            /** Format: int64 */
            id: number;
            /** @enum {string} */
            status: WatchedTvStatus;
            seasons: components["schemas"]["WatchedTvSeason"][];
        }[];
        WatchedTvSeason: {
            season_number: number;
            /** @enum {string} */
            status: WatchedTvStatus;
            episodes: {
                episode_number: number;
                in_watched: boolean;
            }[];
        };
        Message: {
            message: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
};
export type HealthCheck = components['schemas']['HealthCheck'];
export type UserResponse = components['schemas']['UserResponse'];
export type User = components['schemas']['User'];
export type CreateUser = components['schemas']['CreateUser'];
export type AuthenticateUser = components['schemas']['AuthenticateUser'];
export type AuthenticationToken = components['schemas']['AuthenticationToken'];
export type Logout = components['schemas']['Logout'];
export type SearchMoviesResponse = components['schemas']['SearchMoviesResponse'];
export type SearchMovie = components['schemas']['SearchMovie'];
export type SearchTvResponse = components['schemas']['SearchTVResponse'];
export type SearchTv = components['schemas']['SearchTv'];
export type SearchPeopleResponse = components['schemas']['SearchPeopleResponse'];
export type SearchPeople = components['schemas']['SearchPeople'];
export type MovieDetailsResponse = components['schemas']['MovieDetailsResponse'];
export type MovieDetails = components['schemas']['MovieDetails'];
export type CastMoviesResponse = components['schemas']['CastMoviesResponse'];
export type CastMovies = components['schemas']['CastMovies'];
export type TvDetailsResponse = components['schemas']['TvDetailsResponse'];
export type TvDetails = components['schemas']['TvDetails'];
export type TvSeason = components['schemas']['TvSeason'];
export type TvSeasonDetailsResponse = components['schemas']['TvSeasonDetailsResponse'];
export type TvSeasonDetails = components['schemas']['TvSeasonDetails'];
export type TvEpisode = components['schemas']['TvEpisode'];
export type TvEpisodeDetailsResponse = components['schemas']['TvEpisodeDetailsResponse'];
export type TvEpisodeDetails = components['schemas']['TvEpisodeDetails'];
export type CastTvResponse = components['schemas']['CastTvResponse'];
export type CastTv = components['schemas']['CastTv'];
export type Role = components['schemas']['Role'];
export type PersonDetailsResponse = components['schemas']['PersonDetailsResponse'];
export type PersonDetails = components['schemas']['PersonDetails'];
export type WatchProvidersResponse = components['schemas']['WatchProvidersResponse'];
export type WatchProviders = components['schemas']['WatchProviders'];
export type Provider = components['schemas']['Provider'];
export type WatchlistResponse = components['schemas']['WatchlistResponse'];
export type Watchlist = components['schemas']['Watchlist'];
export type InWatchlist = components['schemas']['InWatchlist'];
export type Watched = components['schemas']['Watched'];
export type InWatched = components['schemas']['InWatched'];
export type WatchedTv = components['schemas']['WatchedTv'];
export type WatchedTvSeason = components['schemas']['WatchedTvSeason'];
export type Message = components['schemas']['Message'];
export type $defs = Record<string, never>;
export interface operations {
    HealthcheckHandler: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HealthCheck"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetCurrentUserHandler: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    CreateUserHandler: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUser"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Failed validation */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    CreateAuthenticationTokenHandler: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AuthenticateUser"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuthenticationToken"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Failed validation */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    InvalidateAuthenticationTokenHandler: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Logout"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    SearchMoviesHandler: {
        parameters: {
            query: {
                /** @description The search query */
                q: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SearchMoviesResponse"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    SearchTvHandler: {
        parameters: {
            query: {
                /** @description The search query */
                q: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SearchTVResponse"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    SearchPeopleHandler: {
        parameters: {
            query: {
                /** @description The search query */
                q: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SearchPeopleResponse"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    GetMovieDetailsHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The movie id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MovieDetailsResponse"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    GetTvDetailsHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TvDetailsResponse"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    GetTvSeasonDetailsHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
                /** @description The season number */
                season_number: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TvSeasonDetailsResponse"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    GetTvEpisodeDetailsHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
                /** @description The season number */
                season_number: number;
                /** @description The episode number */
                episode_number: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TvEpisodeDetailsResponse"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    GetPersonDetailsHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The person id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PersonDetailsResponse"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    GetCastMoviesHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The movie id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CastMoviesResponse"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    GetCastTvHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CastTvResponse"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    GetMovieWatchProvidersHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The movie id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WatchProvidersResponse"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    GetTvWatchProvidersHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WatchProvidersResponse"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    GetWatchlistHandler: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WatchlistResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    CheckMovieInWatchlistHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The movie id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InWatchlist"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    AddMovieToWatchlistHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The movie id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    RemoveMovieFromWatchlistHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The movie id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    CheckTvInWatchlistHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InWatchlist"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    AddTvToWatchlistHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    RemoveTvFromWatchlistHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    GetWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Watched"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    CheckMovieInWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The movie id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InWatched"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    AddMovieToWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The movie id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    RemoveMovieFromWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The movie id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    CheckTvInWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WatchedTv"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    AddTvToWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    RemoveTvFromWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CheckTvSeasonInWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
                /** @description The season number */
                season_number: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WatchedTvSeason"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    AddTvSeasonToWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
                /** @description The season number */
                season_number: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    RemoveTvSeasonFromWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
                /** @description The season number */
                season_number: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    CheckTvEpisodeInWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
                /** @description The season number */
                season_number: number;
                /** @description The episode number */
                episode_number: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InWatched"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    AddTvEpisodeToWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
                /** @description The season number */
                season_number: number;
                /** @description The episode number */
                episode_number: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    RemoveTvEpisodeFromWatchedHandler: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The TV show id */
                id: number;
                /** @description The season number */
                season_number: number;
                /** @description The episode number */
                episode_number: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
}
export enum WatchedTvStatus {
    watched = "watched",
    in_progress = "in_progress",
    not_watched = "not_watched"
}

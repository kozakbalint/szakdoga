// Package types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package types

const (
	Main_authScopes = "main_auth.Scopes"
)

// Defines values for WatchedTvStatus.
const (
	WatchedTvStatusInProgress WatchedTvStatus = "in_progress"
	WatchedTvStatusNotWatched WatchedTvStatus = "not_watched"
	WatchedTvStatusWatched    WatchedTvStatus = "watched"
)

// Defines values for WatchedTvSeasonStatus.
const (
	WatchedTvSeasonStatusInProgress WatchedTvSeasonStatus = "in_progress"
	WatchedTvSeasonStatusNotWatched WatchedTvSeasonStatus = "not_watched"
	WatchedTvSeasonStatusWatched    WatchedTvSeasonStatus = "watched"
)

// Defines values for GetWatchedHandlerParamsType.
const (
	Movies GetWatchedHandlerParamsType = "movies"
	Tv     GetWatchedHandlerParamsType = "tv"
)

// AuthenticateUser defines model for AuthenticateUser.
type AuthenticateUser struct {
	Email    *string `json:"email,omitempty"`
	Password *string `json:"password,omitempty"`
}

// AuthenticationToken defines model for AuthenticationToken.
type AuthenticationToken struct {
	AuthenticationToken *struct {
		Expiry *string `json:"expiry,omitempty"`
		Token  *string `json:"token,omitempty"`
	} `json:"authentication_token,omitempty"`
}

// Buy defines model for Buy.
type Buy struct {
	DisplayPriority *int    `json:"display_priority,omitempty"`
	LogoUrl         *string `json:"logo_url,omitempty"`
	ProviderId      *int64  `json:"provider_id,omitempty"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

// CastMovies defines model for CastMovies.
type CastMovies struct {
	Character  *string  `json:"character,omitempty"`
	Id         *int64   `json:"id,omitempty"`
	Name       *string  `json:"name,omitempty"`
	Order      *int     `json:"order,omitempty"`
	Popularity *float32 `json:"popularity,omitempty"`
	ProfileUrl *string  `json:"profile_url,omitempty"`
}

// CastMoviesResponse defines model for CastMoviesResponse.
type CastMoviesResponse struct {
	Cast *[]CastMovies `json:"cast,omitempty"`
}

// CastTv defines model for CastTv.
type CastTv struct {
	Id         *int64   `json:"id,omitempty"`
	Name       *string  `json:"name,omitempty"`
	Order      *int     `json:"order,omitempty"`
	Popularity *float32 `json:"popularity,omitempty"`
	ProfileUrl *string  `json:"profile_url,omitempty"`
	Roles      *[]Role  `json:"roles,omitempty"`
}

// CastTvResponse defines model for CastTvResponse.
type CastTvResponse struct {
	Cast *[]CastTv `json:"cast,omitempty"`
}

// CreateUser defines model for CreateUser.
type CreateUser struct {
	Email    *string `json:"email,omitempty"`
	Name     *string `json:"name,omitempty"`
	Password *string `json:"password,omitempty"`
}

// ErrorBadRequest defines model for ErrorBadRequest.
type ErrorBadRequest struct {
	Message *string `json:"message,omitempty"`
}

// ErrorBadRequestMissingQuery defines model for ErrorBadRequestMissingQuery.
type ErrorBadRequestMissingQuery struct {
	Message *string `json:"message,omitempty"`
}

// ErrorBadRequestPath defines model for ErrorBadRequestPath.
type ErrorBadRequestPath struct {
	Message *string `json:"message,omitempty"`
}

// ErrorFailedValidation defines model for ErrorFailedValidation.
type ErrorFailedValidation struct {
	Email *string `json:"email,omitempty"`
}

// ErrorInternalServerError defines model for ErrorInternalServerError.
type ErrorInternalServerError struct {
	Message *string `json:"message,omitempty"`
}

// ErrorInvalidCredentials defines model for ErrorInvalidCredentials.
type ErrorInvalidCredentials struct {
	Message *string `json:"message,omitempty"`
}

// ErrorUnauthorized defines model for ErrorUnauthorized.
type ErrorUnauthorized struct {
	Message *string `json:"message,omitempty"`
}

// Flatrate defines model for Flatrate.
type Flatrate struct {
	DisplayPriority *int    `json:"display_priority,omitempty"`
	LogoUrl         *string `json:"logo_url,omitempty"`
	ProviderId      *int64  `json:"provider_id,omitempty"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

// HealthCheck defines model for HealthCheck.
type HealthCheck struct {
	Healthcheck *struct {
		Status     *string `json:"status,omitempty"`
		SystemInfo *struct {
			CorsTrustedOrigins *[]string `json:"cors_trusted_origins,omitempty"`
			Environment        *string   `json:"environment,omitempty"`
			Version            *string   `json:"version,omitempty"`
		} `json:"systemInfo,omitempty"`
	} `json:"healthcheck,omitempty"`
}

// InWatched defines model for InWatched.
type InWatched struct {
	InWatched *bool `json:"in_watched,omitempty"`
}

// InWatchlist defines model for InWatchlist.
type InWatchlist struct {
	InWatchlist *bool `json:"in_watchlist,omitempty"`
}

// Logout defines model for Logout.
type Logout struct {
	Message *string `json:"message,omitempty"`
}

// MovieDetails defines model for MovieDetails.
type MovieDetails struct {
	Genres      *[]string `json:"genres,omitempty"`
	Id          *int64    `json:"id,omitempty"`
	Overview    *string   `json:"overview,omitempty"`
	Popularity  *float32  `json:"popularity,omitempty"`
	PosterUrl   *string   `json:"poster_url,omitempty"`
	ReleaseDate *string   `json:"release_date,omitempty"`
	Runtime     *int      `json:"runtime,omitempty"`
	Title       *string   `json:"title,omitempty"`
	VoteAverage *float32  `json:"vote_average,omitempty"`
}

// MovieDetailsResponse defines model for MovieDetailsResponse.
type MovieDetailsResponse struct {
	Movie *MovieDetails `json:"movie,omitempty"`
}

// MovieWatchlistAddedSuccess defines model for MovieWatchlistAddedSuccess.
type MovieWatchlistAddedSuccess struct {
	Message *string `json:"message,omitempty"`
}

// MovieWatchlistRemovedSuccess defines model for MovieWatchlistRemovedSuccess.
type MovieWatchlistRemovedSuccess struct {
	Message *string `json:"message,omitempty"`
}

// PersonDetails defines model for PersonDetails.
type PersonDetails struct {
	Biography  *string  `json:"biography,omitempty"`
	Birthday   *string  `json:"birthday,omitempty"`
	Id         *int64   `json:"id,omitempty"`
	Name       *string  `json:"name,omitempty"`
	Popularity *float32 `json:"popularity,omitempty"`
	ProfileUrl *string  `json:"profile_url,omitempty"`
}

// PersonDetailsResponse defines model for PersonDetailsResponse.
type PersonDetailsResponse struct {
	Person *PersonDetails `json:"person,omitempty"`
}

// Rent defines model for Rent.
type Rent struct {
	DisplayPriority *int    `json:"display_priority,omitempty"`
	LogoUrl         *string `json:"logo_url,omitempty"`
	ProviderId      *int64  `json:"provider_id,omitempty"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

// Role defines model for Role.
type Role struct {
	Character    *string `json:"character,omitempty"`
	EpisodeCount *int    `json:"episode_count,omitempty"`
}

// SearchMovie defines model for SearchMovie.
type SearchMovie struct {
	Id          *int64   `json:"id,omitempty"`
	Overview    *string  `json:"overview,omitempty"`
	Popularity  *float32 `json:"popularity,omitempty"`
	PosterUrl   *string  `json:"poster_url,omitempty"`
	ReleaseDate *string  `json:"release_date,omitempty"`
	Title       *string  `json:"title,omitempty"`
	VoteAverage *float32 `json:"vote_average,omitempty"`
}

// SearchMoviesResponse defines model for SearchMoviesResponse.
type SearchMoviesResponse struct {
	Movies *[]SearchMovie `json:"movies,omitempty"`
}

// SearchPeople defines model for SearchPeople.
type SearchPeople struct {
	Id         *int64   `json:"id,omitempty"`
	Name       *string  `json:"name,omitempty"`
	Popularity *float32 `json:"popularity,omitempty"`
	ProfileUrl *string  `json:"profile_url,omitempty"`
}

// SearchPeopleResponse defines model for SearchPeopleResponse.
type SearchPeopleResponse struct {
	People *[]SearchPeople `json:"people,omitempty"`
}

// SearchTVResponse defines model for SearchTVResponse.
type SearchTVResponse struct {
	Tv *[]SearchTv `json:"tv,omitempty"`
}

// SearchTv defines model for SearchTv.
type SearchTv struct {
	Id          *int64   `json:"id,omitempty"`
	Overview    *string  `json:"overview,omitempty"`
	Popularity  *float32 `json:"popularity,omitempty"`
	PosterUrl   *string  `json:"poster_url,omitempty"`
	ReleaseDate *string  `json:"release_date,omitempty"`
	Title       *string  `json:"title,omitempty"`
	VoteAverage *float32 `json:"vote_average,omitempty"`
}

// TvDetails defines model for TvDetails.
type TvDetails struct {
	FirstAirDate     *string     `json:"first_air_date,omitempty"`
	Genres           *[]string   `json:"genres,omitempty"`
	Id               *int64      `json:"id,omitempty"`
	LastAirDate      *string     `json:"last_air_date,omitempty"`
	Name             *string     `json:"name,omitempty"`
	NumberOfEpisodes *int        `json:"number_of_episodes,omitempty"`
	NumberOfSeasons  *int        `json:"number_of_seasons,omitempty"`
	Overview         *string     `json:"overview,omitempty"`
	Popularity       *float32    `json:"popularity,omitempty"`
	PosterUrl        *string     `json:"poster_url,omitempty"`
	Seasons          *[]TvSeason `json:"seasons,omitempty"`
	Status           *string     `json:"status,omitempty"`
	VoteAverage      *float32    `json:"vote_average,omitempty"`
}

// TvDetailsResponse defines model for TvDetailsResponse.
type TvDetailsResponse struct {
	Tv *TvDetails `json:"tv,omitempty"`
}

// TvEpisode defines model for TvEpisode.
type TvEpisode struct {
	AirDate     *string  `json:"air_date,omitempty"`
	EpisodeType *string  `json:"episode_type,omitempty"`
	Id          *int64   `json:"id,omitempty"`
	Name        *string  `json:"name,omitempty"`
	Overview    *string  `json:"overview,omitempty"`
	Runtime     *int     `json:"runtime,omitempty"`
	StillUrl    *string  `json:"still_url,omitempty"`
	VoteAverage *float32 `json:"vote_average,omitempty"`
}

// TvEpisodeDetails defines model for TvEpisodeDetails.
type TvEpisodeDetails struct {
	AirDate     *string  `json:"air_date,omitempty"`
	Id          *int64   `json:"id,omitempty"`
	Name        *string  `json:"name,omitempty"`
	Overview    *string  `json:"overview,omitempty"`
	Runtime     *int     `json:"runtime,omitempty"`
	StillUrl    *string  `json:"still_url,omitempty"`
	VoteAverage *float32 `json:"vote_average,omitempty"`
}

// TvEpisodeDetailsResponse defines model for TvEpisodeDetailsResponse.
type TvEpisodeDetailsResponse struct {
	Episode *TvEpisodeDetails `json:"episode,omitempty"`
}

// TvSeason defines model for TvSeason.
type TvSeason struct {
	AirDate      *string  `json:"air_date,omitempty"`
	EpisodeCount *int     `json:"episode_count,omitempty"`
	Id           *int64   `json:"id,omitempty"`
	Name         *string  `json:"name,omitempty"`
	Overview     *string  `json:"overview,omitempty"`
	PosterUrl    *string  `json:"poster_url,omitempty"`
	VoteAverage  *float32 `json:"vote_average,omitempty"`
}

// TvSeasonDetails defines model for TvSeasonDetails.
type TvSeasonDetails struct {
	AirDate     *string      `json:"air_date,omitempty"`
	Episodes    *[]TvEpisode `json:"episodes,omitempty"`
	Id          *int64       `json:"id,omitempty"`
	Name        *string      `json:"name,omitempty"`
	Overview    *string      `json:"overview,omitempty"`
	PosterUrl   *string      `json:"poster_url,omitempty"`
	VoteAverage *float32     `json:"vote_average,omitempty"`
}

// TvSeasonDetailsResponse defines model for TvSeasonDetailsResponse.
type TvSeasonDetailsResponse struct {
	Season *TvSeasonDetails `json:"season,omitempty"`
}

// TvWatchlistAddedSuccess defines model for TvWatchlistAddedSuccess.
type TvWatchlistAddedSuccess struct {
	Message *string `json:"message,omitempty"`
}

// TvWatchlistRemovedSuccess defines model for TvWatchlistRemovedSuccess.
type TvWatchlistRemovedSuccess struct {
	Message *string `json:"message,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt User creation date
	CreatedAt *string `json:"created_at,omitempty"`

	// Email User supplied email
	Email *string `json:"email,omitempty"`

	// Id User id
	Id *int64 `json:"id,omitempty"`

	// Name User supplied name
	Name *string `json:"name,omitempty"`
}

// UserResponse defines model for UserResponse.
type UserResponse struct {
	User *User `json:"user,omitempty"`
}

// WatchProviders defines model for WatchProviders.
type WatchProviders struct {
	Id        *int64 `json:"id,omitempty"`
	Providers *struct {
		Buy      *[]Buy      `json:"buy,omitempty"`
		Flatrate *[]Flatrate `json:"flatrate,omitempty"`
		Rent     *[]Rent     `json:"rent,omitempty"`
	} `json:"providers,omitempty"`
}

// WatchProvidersResponse defines model for WatchProvidersResponse.
type WatchProvidersResponse struct {
	WatchProviders *WatchProviders `json:"watch_providers,omitempty"`
}

// Watched defines model for Watched.
type Watched struct {
	Movies *[]SearchMoviesResponse `json:"movies,omitempty"`
	Tv     *[]SearchTVResponse     `json:"tv,omitempty"`
}

// WatchedMovieAddedSuccess defines model for WatchedMovieAddedSuccess.
type WatchedMovieAddedSuccess struct {
	Message *string `json:"message,omitempty"`
}

// WatchedMovieRemovedSuccess defines model for WatchedMovieRemovedSuccess.
type WatchedMovieRemovedSuccess struct {
	Message *string `json:"message,omitempty"`
}

// WatchedTv defines model for WatchedTv.
type WatchedTv = []struct {
	Id      *int64             `json:"id,omitempty"`
	Seasons *[]WatchedTvSeason `json:"seasons,omitempty"`
	Status  *WatchedTvStatus   `json:"status,omitempty"`
}

// WatchedTvStatus defines model for WatchedTv.Status.
type WatchedTvStatus string

// WatchedTvAddedSuccess defines model for WatchedTvAddedSuccess.
type WatchedTvAddedSuccess struct {
	Message *string `json:"message,omitempty"`
}

// WatchedTvEpisodeAddedSuccess defines model for WatchedTvEpisodeAddedSuccess.
type WatchedTvEpisodeAddedSuccess struct {
	Message *string `json:"message,omitempty"`
}

// WatchedTvEpisodeRemovedSuccess defines model for WatchedTvEpisodeRemovedSuccess.
type WatchedTvEpisodeRemovedSuccess struct {
	Message *string `json:"message,omitempty"`
}

// WatchedTvRemovedSuccess defines model for WatchedTvRemovedSuccess.
type WatchedTvRemovedSuccess struct {
	Message *string `json:"message,omitempty"`
}

// WatchedTvSeason defines model for WatchedTvSeason.
type WatchedTvSeason struct {
	Episodes *[]struct {
		EpisodeNumber *int  `json:"episode_number,omitempty"`
		InWatched     *bool `json:"in_watched,omitempty"`
	} `json:"episodes,omitempty"`
	SeasonNumber *int                   `json:"season_number,omitempty"`
	Status       *WatchedTvSeasonStatus `json:"status,omitempty"`
}

// WatchedTvSeasonStatus defines model for WatchedTvSeason.Status.
type WatchedTvSeasonStatus string

// WatchedTvSeasonAddedSuccess defines model for WatchedTvSeasonAddedSuccess.
type WatchedTvSeasonAddedSuccess struct {
	Message *string `json:"message,omitempty"`
}

// WatchedTvSeasonRemovedSuccess defines model for WatchedTvSeasonRemovedSuccess.
type WatchedTvSeasonRemovedSuccess struct {
	Message *string `json:"message,omitempty"`
}

// Watchlist defines model for Watchlist.
type Watchlist struct {
	Movies *[]SearchMovie `json:"movies,omitempty"`
	Tv     *[]SearchTv    `json:"tv,omitempty"`
}

// SearchMoviesHandlerParams defines parameters for SearchMoviesHandler.
type SearchMoviesHandlerParams struct {
	// Q The search query
	Q string `form:"q" json:"q"`
}

// SearchPeopleHandlerParams defines parameters for SearchPeopleHandler.
type SearchPeopleHandlerParams struct {
	// Q The search query
	Q string `form:"q" json:"q"`
}

// SearchTvHandlerParams defines parameters for SearchTvHandler.
type SearchTvHandlerParams struct {
	// Q The search query
	Q string `form:"q" json:"q"`
}

// GetWatchedHandlerParams defines parameters for GetWatchedHandler.
type GetWatchedHandlerParams struct {
	// Type The type of the watched list
	Type *GetWatchedHandlerParamsType `form:"type,omitempty" json:"type,omitempty"`
}

// GetWatchedHandlerParamsType defines parameters for GetWatchedHandler.
type GetWatchedHandlerParamsType string

// CreateAuthenticationTokenHandlerJSONRequestBody defines body for CreateAuthenticationTokenHandler for application/json ContentType.
type CreateAuthenticationTokenHandlerJSONRequestBody = AuthenticateUser

// CreateUserHandlerJSONRequestBody defines body for CreateUserHandler for application/json ContentType.
type CreateUserHandlerJSONRequestBody = CreateUser

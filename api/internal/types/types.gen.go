// Package types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package types

const (
	Main_authScopes = "main_auth.Scopes"
)

// Defines values for WatchedTvStatus.
const (
	WatchedTvStatusInProgress WatchedTvStatus = "in_progress"
	WatchedTvStatusNotWatched WatchedTvStatus = "not_watched"
	WatchedTvStatusWatched    WatchedTvStatus = "watched"
)

// Defines values for WatchedTvSeasonStatus.
const (
	WatchedTvSeasonStatusInProgress WatchedTvSeasonStatus = "in_progress"
	WatchedTvSeasonStatusNotWatched WatchedTvSeasonStatus = "not_watched"
	WatchedTvSeasonStatusWatched    WatchedTvSeasonStatus = "watched"
)

// AuthenticateUser defines model for AuthenticateUser.
type AuthenticateUser struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// AuthenticationToken defines model for AuthenticationToken.
type AuthenticationToken struct {
	AuthenticationToken struct {
		Expiry string `json:"expiry"`
		Token  string `json:"token"`
	} `json:"authentication_token"`
}

// CastMovies defines model for CastMovies.
type CastMovies struct {
	Character  string  `json:"character"`
	Id         int64   `json:"id"`
	Name       string  `json:"name"`
	Order      int     `json:"order"`
	Popularity float32 `json:"popularity"`
	ProfileUrl string  `json:"profile_url"`
}

// CastMoviesResponse defines model for CastMoviesResponse.
type CastMoviesResponse struct {
	Cast []CastMovies `json:"cast"`
}

// CastTv defines model for CastTv.
type CastTv struct {
	Id         int64   `json:"id"`
	Name       string  `json:"name"`
	Order      int     `json:"order"`
	Popularity float32 `json:"popularity"`
	ProfileUrl string  `json:"profile_url"`
	Roles      []Role  `json:"roles"`
}

// CastTvResponse defines model for CastTvResponse.
type CastTvResponse struct {
	Cast []CastTv `json:"cast"`
}

// CreateUser defines model for CreateUser.
type CreateUser struct {
	Email    string `json:"email"`
	Name     string `json:"name"`
	Password string `json:"password"`
}

// HealthCheck defines model for HealthCheck.
type HealthCheck struct {
	Healthcheck struct {
		Status     string `json:"status"`
		SystemInfo struct {
			CorsTrustedOrigins []string `json:"cors_trusted_origins"`
			Environment        string   `json:"environment"`
			Version            string   `json:"version"`
		} `json:"systemInfo"`
	} `json:"healthcheck"`
}

// InWatched defines model for InWatched.
type InWatched struct {
	InWatched bool `json:"in_watched"`
}

// InWatchlist defines model for InWatchlist.
type InWatchlist struct {
	InWatchlist bool `json:"in_watchlist"`
}

// Logout defines model for Logout.
type Logout struct {
	Message string `json:"message"`
}

// Message defines model for Message.
type Message struct {
	Message string `json:"message"`
}

// MovieDetails defines model for MovieDetails.
type MovieDetails struct {
	Genres      []string `json:"genres"`
	Id          int64    `json:"id"`
	Overview    string   `json:"overview"`
	Popularity  float32  `json:"popularity"`
	PosterUrl   string   `json:"poster_url"`
	ReleaseDate string   `json:"release_date"`
	Runtime     int      `json:"runtime"`
	Title       string   `json:"title"`
	VoteAverage float32  `json:"vote_average"`
}

// MovieDetailsResponse defines model for MovieDetailsResponse.
type MovieDetailsResponse struct {
	Movie MovieDetails `json:"movie"`
}

// PersonDetails defines model for PersonDetails.
type PersonDetails struct {
	Biography  string  `json:"biography"`
	Birthday   string  `json:"birthday"`
	Id         int64   `json:"id"`
	Name       string  `json:"name"`
	Popularity float32 `json:"popularity"`
	ProfileUrl string  `json:"profile_url"`
}

// PersonDetailsResponse defines model for PersonDetailsResponse.
type PersonDetailsResponse struct {
	Person PersonDetails `json:"person"`
}

// Provider defines model for Provider.
type Provider struct {
	DisplayPriority int    `json:"display_priority"`
	Id              int64  `json:"id"`
	LogoUrl         string `json:"logo_url"`
	Name            string `json:"name"`
}

// Role defines model for Role.
type Role struct {
	Character    string `json:"character"`
	EpisodeCount int    `json:"episode_count"`
}

// SearchMovie defines model for SearchMovie.
type SearchMovie struct {
	Id          int64   `json:"id"`
	Overview    string  `json:"overview"`
	Popularity  float32 `json:"popularity"`
	PosterUrl   string  `json:"poster_url"`
	ReleaseDate string  `json:"release_date"`
	Title       string  `json:"title"`
	VoteAverage float32 `json:"vote_average"`
}

// SearchMoviesResponse defines model for SearchMoviesResponse.
type SearchMoviesResponse struct {
	Movies []SearchMovie `json:"movies"`
}

// SearchPeople defines model for SearchPeople.
type SearchPeople struct {
	Id         int64   `json:"id"`
	Name       string  `json:"name"`
	Popularity float32 `json:"popularity"`
	ProfileUrl string  `json:"profile_url"`
}

// SearchPeopleResponse defines model for SearchPeopleResponse.
type SearchPeopleResponse struct {
	People []SearchPeople `json:"people"`
}

// SearchTVResponse defines model for SearchTVResponse.
type SearchTVResponse struct {
	Tv []SearchTv `json:"tv"`
}

// SearchTv defines model for SearchTv.
type SearchTv struct {
	Id          int64   `json:"id"`
	Overview    string  `json:"overview"`
	Popularity  float32 `json:"popularity"`
	PosterUrl   string  `json:"poster_url"`
	ReleaseDate string  `json:"release_date"`
	Title       string  `json:"title"`
	VoteAverage float32 `json:"vote_average"`
}

// TvDetails defines model for TvDetails.
type TvDetails struct {
	FirstAirDate     string     `json:"first_air_date"`
	Genres           []string   `json:"genres"`
	Id               int64      `json:"id"`
	LastAirDate      string     `json:"last_air_date"`
	Name             string     `json:"name"`
	NumberOfEpisodes int        `json:"number_of_episodes"`
	NumberOfSeasons  int        `json:"number_of_seasons"`
	Overview         string     `json:"overview"`
	Popularity       float32    `json:"popularity"`
	PosterUrl        string     `json:"poster_url"`
	Seasons          []TvSeason `json:"seasons"`
	Status           string     `json:"status"`
	VoteAverage      float32    `json:"vote_average"`
}

// TvDetailsResponse defines model for TvDetailsResponse.
type TvDetailsResponse struct {
	Tv TvDetails `json:"tv"`
}

// TvEpisode defines model for TvEpisode.
type TvEpisode struct {
	AirDate     string  `json:"air_date"`
	EpisodeType string  `json:"episode_type"`
	Id          int64   `json:"id"`
	Name        string  `json:"name"`
	Overview    string  `json:"overview"`
	Runtime     int     `json:"runtime"`
	StillUrl    string  `json:"still_url"`
	VoteAverage float32 `json:"vote_average"`
}

// TvEpisodeDetails defines model for TvEpisodeDetails.
type TvEpisodeDetails struct {
	AirDate     string  `json:"air_date"`
	Id          int64   `json:"id"`
	Name        string  `json:"name"`
	Overview    string  `json:"overview"`
	Runtime     int     `json:"runtime"`
	StillUrl    string  `json:"still_url"`
	VoteAverage float32 `json:"vote_average"`
}

// TvEpisodeDetailsResponse defines model for TvEpisodeDetailsResponse.
type TvEpisodeDetailsResponse struct {
	Episode TvEpisodeDetails `json:"episode"`
}

// TvSeason defines model for TvSeason.
type TvSeason struct {
	AirDate      string  `json:"air_date"`
	EpisodeCount int     `json:"episode_count"`
	Id           int64   `json:"id"`
	Name         string  `json:"name"`
	Overview     string  `json:"overview"`
	PosterUrl    string  `json:"poster_url"`
	VoteAverage  float32 `json:"vote_average"`
}

// TvSeasonDetails defines model for TvSeasonDetails.
type TvSeasonDetails struct {
	AirDate     string      `json:"air_date"`
	Episodes    []TvEpisode `json:"episodes"`
	Id          int64       `json:"id"`
	Name        string      `json:"name"`
	Overview    string      `json:"overview"`
	PosterUrl   string      `json:"poster_url"`
	VoteAverage float32     `json:"vote_average"`
}

// TvSeasonDetailsResponse defines model for TvSeasonDetailsResponse.
type TvSeasonDetailsResponse struct {
	Season TvSeasonDetails `json:"season"`
}

// User defines model for User.
type User struct {
	// CreatedAt User creation date
	CreatedAt string `json:"created_at"`

	// Email User supplied email
	Email string `json:"email"`

	// Id User id
	Id int64 `json:"id"`

	// Name User supplied name
	Name string `json:"name"`
}

// UserResponse defines model for UserResponse.
type UserResponse struct {
	User User `json:"user"`
}

// WatchProviders defines model for WatchProviders.
type WatchProviders struct {
	Buy      []Provider `json:"buy"`
	Flatrate []Provider `json:"flatrate"`
	Id       int64      `json:"id"`
	Rent     []Provider `json:"rent"`
}

// WatchProvidersResponse defines model for WatchProvidersResponse.
type WatchProvidersResponse struct {
	WatchProviders WatchProviders `json:"watch_providers"`
}

// Watched defines model for Watched.
type Watched struct {
	Movies []SearchMovie `json:"movies"`
	Tv     []SearchTv    `json:"tv"`
}

// WatchedResponse defines model for WatchedResponse.
type WatchedResponse struct {
	Watched Watched `json:"watched"`
}

// WatchedTv defines model for WatchedTv.
type WatchedTv struct {
	Id       int64             `json:"id"`
	Progress float64           `json:"progress"`
	Seasons  []WatchedTvSeason `json:"seasons"`
	Status   WatchedTvStatus   `json:"status"`
}

// WatchedTvStatus defines model for WatchedTv.Status.
type WatchedTvStatus string

// WatchedTvResponse defines model for WatchedTvResponse.
type WatchedTvResponse struct {
	WatchedTv WatchedTv `json:"watched_tv"`
}

// WatchedTvSeason defines model for WatchedTvSeason.
type WatchedTvSeason struct {
	Episodes     []int                 `json:"episodes"`
	SeasonNumber int                   `json:"season_number"`
	Status       WatchedTvSeasonStatus `json:"status"`
}

// WatchedTvSeasonStatus defines model for WatchedTvSeason.Status.
type WatchedTvSeasonStatus string

// WatchedTvSeasonResponse defines model for WatchedTvSeasonResponse.
type WatchedTvSeasonResponse struct {
	WatchedSeason WatchedTvSeason `json:"watched_season"`
}

// Watchlist defines model for Watchlist.
type Watchlist struct {
	Movies []SearchMovie `json:"movies"`
	Tv     []SearchTv    `json:"tv"`
}

// WatchlistResponse defines model for WatchlistResponse.
type WatchlistResponse struct {
	Watchlist Watchlist `json:"watchlist"`
}

// SearchMoviesHandlerParams defines parameters for SearchMoviesHandler.
type SearchMoviesHandlerParams struct {
	// Q The search query
	Q string `form:"q" json:"q"`
}

// SearchPeopleHandlerParams defines parameters for SearchPeopleHandler.
type SearchPeopleHandlerParams struct {
	// Q The search query
	Q string `form:"q" json:"q"`
}

// SearchTvHandlerParams defines parameters for SearchTvHandler.
type SearchTvHandlerParams struct {
	// Q The search query
	Q string `form:"q" json:"q"`
}

// CreateAuthenticationTokenHandlerJSONRequestBody defines body for CreateAuthenticationTokenHandler for application/json ContentType.
type CreateAuthenticationTokenHandlerJSONRequestBody = AuthenticateUser

// CreateUserHandlerJSONRequestBody defines body for CreateUserHandler for application/json ContentType.
type CreateUserHandlerJSONRequestBody = CreateUser
